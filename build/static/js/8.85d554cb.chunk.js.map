{"version":3,"sources":["styled/MovieDedetails/MovieDedetails.styled.js","components/MovieDetailsPage/MovieInfo.js","components/MovieDetailsPage/MovieDetailsPage.js"],"names":["MovieInfoWrapper","styled","div","AddInfoWrapper","Button","button","Wrapper","MovieInfo","movie","navigate","useNavigate","location","useLocation","userScore","Math","round","vote_average","year","release_date","substring","type","onClick","state","from","src","poster_path","alt","title","width","overview","genres","map","id","name","to","MovieDetailsPage","movieId","useParams","useState","setMovie","useEffect","fetch","then","response","json","data"],"mappings":"uOAEaA,EAAmBC,IAAOC,IAAV,mEAOhBC,EAAiBF,IAAOC,IAAV,4EAKdE,EAASH,IAAOI,OAAV,oEAKNC,EAAUL,IAAOC,IAAV,yE,cCTL,SAASK,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAC5BC,EAAWC,cACXC,EAAWC,cACXC,EAAYC,KAAKC,MAAiC,IAA1B,UAAGP,EAAMQ,cAAwB,IACzDC,EAAOT,EAAMU,aAAaC,UAAU,EAAG,GAM7C,OACE,qCACE,eAACnB,EAAD,WACE,eAACM,EAAD,WACE,cAACF,EAAD,CAAQgB,KAAK,SAASC,QAR9B,WAAqB,IAAD,IAClBZ,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAUW,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,MAO5B,qBAGA,qBACEC,IAAG,yCAAoChB,EAAMiB,aAC7CC,IAAKlB,EAAMmB,MACXC,MAAM,aAGV,eAACzB,EAAD,WACE,+BACGK,EAAMmB,MADT,KACkBV,EADlB,OAGA,2CACA,4BAAIT,EAAMqB,WACV,8BACE,4CADF,IACsBhB,EADtB,OAGA,wCACA,6BACGL,EAAMsB,OAAOC,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACvB,OAAO,6BAAcA,GAALD,cAMxB,gCACE,wDACA,+BACE,6BACE,cAAC,IAAD,CAASE,GAAG,OAAZ,oBAEF,6BACE,cAAC,IAAD,CAASA,GAAG,UAAZ,0BAGJ,cAAC,IAAD,UCzDO,SAASC,IACtB,IAAQC,EAAYC,cAAZD,QACR,EAA0BE,mBAAS,MAAnC,mBAAO9B,EAAP,KAAc+B,EAAd,KAUA,OARAC,qBAAU,WACRC,MAAM,sCAAD,OACmCL,EADnC,6DAGFM,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUN,EAASM,QAC1B,CAACT,IAEU,OAAV5B,EACK,6BAEA,cAACD,EAAD,CAAWC,MAAOA","file":"static/js/8.85d554cb.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const MovieInfoWrapper = styled.div`\npadding-top:10px;\ndisplay:flex;\n}\n\n`;\n\nexport const AddInfoWrapper = styled.div`\n  display: inline-block;\n  margin-left: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  margin-bottom: 5px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import {\n  MovieInfoWrapper,\n  AddInfoWrapper,\n  Button,\n  Wrapper,\n} from \"../../styled/MovieDedetails/MovieDedetails.styled\";\nimport { NavLink, useNavigate, useLocation } from \"react-router-dom\";\nimport { Outlet } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nexport default function MovieInfo({ movie }) {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const userScore = Math.round((`${movie.vote_average}` * 100) / 10);\n  const year = movie.release_date.substring(0, 4);\n\n  function onGoBack() {\n    navigate(location?.state?.from ?? \"/\");\n  }\n\n  return (\n    <>\n      <MovieInfoWrapper>\n        <Wrapper>\n          <Button type=\"button\" onClick={onGoBack}>\n            Go back\n          </Button>\n          <img\n            src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n            alt={movie.title}\n            width=\"250px\"\n          />\n        </Wrapper>\n        <AddInfoWrapper>\n          <h2>\n            {movie.title} ({year})\n          </h2>\n          <h3>Overview:</h3>\n          <p>{movie.overview}</p>\n          <p>\n            <b>User Score:</b> {userScore}%\n          </p>\n          <h3>Genres</h3>\n          <ul>\n            {movie.genres.map(({ id, name }) => {\n              return <li key={id}>{name}</li>;\n            })}\n          </ul>\n        </AddInfoWrapper>\n      </MovieInfoWrapper>\n\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <NavLink to=\"cast\">Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\">Reviews</NavLink>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </>\n  );\n}\n\nMovieInfo.propTypes = {\n  moviee: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n      release_date: PropTypes.string.isRequired,\n      genres: PropTypes.arrayOf(\n        PropTypes.shape({\n          name: PropTypes.string.isRequired,\n          id: PropTypes.number.isRequired,\n        })\n      ),\n    })\n  ),\n};\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport MovieInfo from \"./MovieInfo\";\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=772142c0282e327b3dd3decd2c93164e&language=en-US`\n    )\n      .then((response) => response.json())\n      .then((data) => setMovie(data));\n  }, [movieId]);\n\n  if (movie === null) {\n    return <></>;\n  } else {\n    return <MovieInfo movie={movie} />;\n  }\n}\n"],"sourceRoot":""}